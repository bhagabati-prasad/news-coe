{"version":3,"sources":["components/Navigation.jsx","components/Catcard.jsx","components/Category.jsx","components/Searchcard.jsx","components/Allnews.jsx","components/Slides.jsx","components/NewCatcard.jsx","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","useState","history","useHistory","handleSelect","e","console","log","push","window","location","reload","search","setSearch","Navbar","fixed","bg","variant","expand","Container","fluid","Brand","href","alt","src","width","height","className","Toggle","Collapse","id","Nav","style","maxHeight","navbarScroll","Link","NavDropdown","title","onSelect","Item","eventKey","Form","FormControl","value","type","placeholder","onChange","event","word","target","Button","onClick","Catcard","users","readMore","setReadMore","Row","Col","xs","md","map","cur","str","news_article","Fragment","Card","marginLeft","marginTop","news_image","Img","objectFit","Body","Title","news_headline","Text","length","substr","color","cursor","news_link","rel","news_type","sentiment","Object","entries","entity","key","Category","setUsers","setWord","myParam","URLSearchParams","get","useEffect","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","response","Searchcard","urlToImage","content","author","url","Allnews","getUsers","a","articles","Slides","Carousel","NewCatcard","indx","label","Home","pageCount","setpageCount","alldata","setData","newusers","setNewusers","useLayoutEffect","slice","handlePageClick","selected","currentPage","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19308f08.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Navigation() {\r\n  const [cat, setCat] = useState();\r\n  let history = useHistory();\r\n  const handleSelect = (e) => {\r\n    console.log(e);\r\n    // setCat(e);\r\n    // console.log(cat);\r\n\r\n    history.push(`/category?q=${e}`);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const [search, setSearch] = useState();\r\n  const makeChange = (event) => {\r\n    const word = event.target.value;\r\n    setSearch(word);\r\n    console.log(search);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar fixed='top' bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand href='/'>\r\n            <img\r\n              alt=''\r\n              src='https://cdn-icons-png.flaticon.com/512/237/237014.png'\r\n              width='30'\r\n              height='30'\r\n              className='d-inline-block align-top'\r\n            />{' '}\r\n            News Feed\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbarScroll' />\r\n          <Navbar.Collapse id='navbarScroll'>\r\n            <Nav\r\n              className='me-auto my-2 my-lg-0'\r\n              style={{ maxHeight: '100px' }}\r\n              navbarScroll\r\n            >\r\n              <Nav.Link href='/'>Home</Nav.Link>\r\n              <Nav.Link href='/all-news'>All news</Nav.Link>\r\n              <NavDropdown\r\n                title='Company'\r\n                id='navbarScrollingDropdown'\r\n                onSelect={handleSelect}\r\n              >\r\n                <NavDropdown.Item eventKey='Tech Mahindra'>\r\n                  Tech Mahindra\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='Infosys'>Infosys</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='Accenture'>\r\n                  Accenture\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='Wipro'>Wipro</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='TCS'>TCS</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='Infy'>Infy</NavDropdown.Item>\r\n              </NavDropdown>\r\n\r\n              <NavDropdown\r\n                title='Technology'\r\n                id='navbarScrollingDropdown'\r\n                onSelect={handleSelect}\r\n              >\r\n                <NavDropdown.Item eventKey='Blockchain'>\r\n                  Blockchain\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='AI'>AI</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <NavDropdown\r\n                title='Partners'\r\n                id='navbarScrollingDropdown'\r\n                onSelect={handleSelect}\r\n              >\r\n                <NavDropdown.Item eventKey='AWS'>AWS</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='Google'>Google</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='IBM'>IBM</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey='Microsoft'>\r\n                  Microsoft\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Form className='d-flex'>\r\n              <FormControl\r\n                value={search}\r\n                type='search'\r\n                placeholder='Search'\r\n                className='me-2'\r\n                aria-label='Search'\r\n                onChange={makeChange}\r\n              />\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(`/all-news?q=${search}`);\r\n                  window.location.reload(false);\r\n                }}\r\n                variant='outline-success'\r\n              >\r\n                Search\r\n              </Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\r\nimport { Card, Row, Col, Container } from 'react-bootstrap';\r\n\r\nconst Catcard = ({ users }) => {\r\n  console.log('hello', users);\r\n  const [readMore, setReadMore] = useState(false);\r\n\r\n  const linkName = readMore ? 'Read Less << ' : 'Read More >> ';\r\n  return (\r\n    <>\r\n      <Row className='justify-content-md-center w-100'>\r\n        <Col xs={12} md={8}>\r\n          {users &&\r\n            users.map((cur, id) => {\r\n              const str = cur?.news_article;\r\n\r\n              return (\r\n                <React.Fragment key={id}>\r\n                  <Card style={{ marginLeft: '22px', marginTop: '65px' }}>\r\n                    <Container fluid>\r\n                      <Row>\r\n                        <Col md={3}>\r\n                          {cur?.news_image && (\r\n                            <Card.Img\r\n                              className='mt-4'\r\n                              width='100%'\r\n                              height='150'\r\n                              style={{\r\n                                objectFit: 'cover',\r\n                              }}\r\n                              src={cur?.news_image}\r\n                            />\r\n                          )}\r\n                        </Col>\r\n                        <Col md={9}>\r\n                          <Card.Body>\r\n                            <Card.Title>{cur?.news_headline}</Card.Title>\r\n                            <Card.Text>\r\n                              <p>\r\n                                {str && str.length > 100\r\n                                  ? str.substr(0, 101)\r\n                                  : str.substr(0)}\r\n                                ...\r\n                              </p>\r\n                              {str && !!str.length && (\r\n                                <>\r\n                                  <a\r\n                                    style={{\r\n                                      color: 'blueviolet',\r\n                                      cursor: 'pointer',\r\n                                    }}\r\n                                    className='read-more-link'\r\n                                    onClick={() => {\r\n                                      setReadMore(!readMore);\r\n                                    }}\r\n                                    href={cur?.news_link}\r\n                                    target='_blank'\r\n                                    rel='noopener'\r\n                                  >\r\n                                    {/* <h6>{linkName}</h6> */}\r\n                                    <h6>Read More &gt;&gt;</h6>\r\n                                  </a>\r\n                                  {/* {readMore && str.substr(101)} */}\r\n                                </>\r\n                              )}\r\n                              {/* <h6>Tap full story for more info</h6> */}\r\n                              <p> Source : {cur?.news_type}</p>\r\n                              <p> Sentiment : {cur?.sentiment}</p>\r\n                              <div>\r\n                                {Object.entries(cur?.entity[0]).map(\r\n                                  ([key, value]) => {\r\n                                    return (\r\n                                      <>\r\n                                        <p>\r\n                                          {key}:{value}\r\n                                        </p>\r\n                                      </>\r\n                                    );\r\n                                  }\r\n                                )}\r\n                              </div>\r\n                            </Card.Text>\r\n                            {/* <Card.Link className=\"btn btn-info\" href={cur?.url}>Full Story</Card.Link> */}\r\n                          </Card.Body>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </Card>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default Catcard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Navigation from './Navigation';\r\nimport Catcard from './Catcard';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nconst Category = () => {\r\n  console.log('hello category');\r\n  const [users, setUsers] = useState([]);\r\n  const [word, setWord] = useState('');\r\n  let urlParams = new URLSearchParams(window.location.search);\r\n  let myParam = urlParams.get('q');\r\n  console.log(myParam);\r\n  useEffect(() => {\r\n    setWord(myParam);\r\n    console.log('hello from use', word);\r\n    fetch('https://newerver.herokuapp.com/all', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        myParam,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          console.log(data);\r\n          setUsers(data);\r\n        } else {\r\n          console.log(data);\r\n          console.log('somethng went wrong with server , check once  !');\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        console.log('something went wrong with server', err.response)\r\n      );\r\n  }, [word]);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <Container fluid>\r\n          <Row>\r\n            <Navigation />\r\n          </Row>\r\n          <Row>{users && !!users.length && <Catcard users={users} />}</Row>\r\n        </Container>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default Category;\r\n","import React, { useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nconst Searchcard = ({ users }) => {\r\n  return (\r\n    <>\r\n      <Row className='justify-content-md-center w-100'>\r\n        <Col xs={12} md={8}>\r\n          {users &&\r\n            users.map((cur, id) => {\r\n              console.log(cur);\r\n\r\n              return (\r\n                <>\r\n                  <Card\r\n                    key={id}\r\n                    style={{ marginLeft: '22px', marginTop: '100px' }}\r\n                  >\r\n                    <Row>\r\n                      <Col md={3}>\r\n                        <Card.Img\r\n                          className='mt-4'\r\n                          width='100%'\r\n                          height='150'\r\n                          src={cur.urlToImage}\r\n                        />\r\n                      </Col>\r\n                      <Col md={9}>\r\n                        <Card.Body>\r\n                          <Card.Title>{cur.title}</Card.Title>\r\n                          <Card.Text>\r\n                            <p> {cur.content}</p>\r\n                            source : {cur.author}\r\n                          </Card.Text>\r\n                          <Card.Link href={cur.url}>Full Story</Card.Link>\r\n                        </Card.Body>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </>\r\n              );\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default Searchcard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Navigation from \"./Navigation\";\r\nimport Searchcard from \"./Searchcard\";\r\nconst Allnews = () => {\r\n  const [word, setWord] = useState();\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"hello\");\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const myParam = urlParams.get(\"q\");\r\n    setWord(myParam);\r\n    getUsers();\r\n  }, [word]);\r\n  const getUsers = async () => {\r\n    console.log(\"hello\");\r\n    try {\r\n      let response = await fetch(\r\n        `https://newsapi.org/v2/everything?q=${word}&sortBy=popularity&apiKey=825a0c3207b24416b15fe1e1d1e34eb9&pageSize=5&page=1&language=en`\r\n      );\r\n      response = await response.json();\r\n      setUsers(response.articles);\r\n\r\n      console.log(response.articles);\r\n    } catch (error) {\r\n      console.log(\"my error is \" + error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Navigation />\r\n        </Row>\r\n        <Row>\r\n          <Searchcard users={users} />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Allnews;\r\n","import React from \"react\";\r\nimport { Carousel, Container } from \"react-bootstrap\";\r\nconst Slides=()=>{\r\nreturn(\r\n    <>\r\n   \r\n      <Carousel  style={{marginTop:'55px',width:\"100%\"}}>\r\n      \r\n  \r\n  <Carousel.Item>\r\n    <img\r\n      \r\n      src=\"/image002.png\"\r\n      height=\"200px\"\r\n      width=\"100%\"\r\n      alt=\"Second slide\"\r\n    />\r\n   \r\n  </Carousel.Item>\r\n  \r\n</Carousel>\r\n\r\n    </>\r\n)\r\n}\r\nexport default Slides","import React, { useState } from 'react';\r\nimport { Card, Row, Col, Container } from 'react-bootstrap';\r\n\r\nconst NewCatcard = ({ users }) => {\r\n  console.log('hello', users);\r\n  const [readMore, setReadMore] = useState(false);\r\n\r\n  const linkName = readMore ? 'Read Less << ' : 'Read More >> ';\r\n  return (\r\n    <>\r\n      <Row className='justify-content-md-center w-100'>\r\n        <Col xs={12} md={8}>\r\n          {users &&\r\n            users.map((cur, indx) => {\r\n              console.log(cur?.entity[0]);\r\n\r\n              const str = cur?.news_article;\r\n\r\n              return (\r\n                <React.Fragment key={indx}>\r\n                  <Card style={{ marginLeft: '22px', marginTop: '65px' }}>\r\n                    <Container fluid>\r\n                      <Row>\r\n                        <Col md={3}>\r\n                          {cur?.news_image && (\r\n                            <Card.Img\r\n                              className='mt-4'\r\n                              width='100%'\r\n                              height='150'\r\n                              style={{\r\n                                objectFit: 'cover',\r\n                              }}\r\n                              src={cur?.news_image}\r\n                            />\r\n                          )}\r\n                        </Col>\r\n                        <Col md={9}>\r\n                          <Card.Body>\r\n                            <Card.Title>{cur?.news_headline}</Card.Title>\r\n                            <Card.Text>\r\n                              <p>\r\n                                {str && str.length > 100\r\n                                  ? str.substr(0, 101)\r\n                                  : str.substr(0)}\r\n                                ...\r\n                              </p>\r\n                              {str && !!str.length && (\r\n                                <>\r\n                                  <a\r\n                                    style={{\r\n                                      color: 'blueviolet',\r\n                                      cursor: 'pointer',\r\n                                    }}\r\n                                    className='read-more-link'\r\n                                    onClick={() => {\r\n                                      setReadMore(!readMore);\r\n                                    }}\r\n                                    href={cur?.news_link}\r\n                                    target='_blank'\r\n                                    rel='noopener'\r\n                                  >\r\n                                    <h6>Read More &gt;&gt;</h6>\r\n                                    {/* <h6>{linkName}</h6> */}\r\n                                  </a>\r\n                                  {/* {readMore && str.substr(101)} */}\r\n                                </>\r\n                              )}\r\n                              <p> source : {cur?.news_type}</p>\r\n                              <p> Sentiment : {cur?.label}</p>\r\n                              <div>\r\n                                {Object.entries(cur?.entity[0]).map(\r\n                                  ([key, value]) => {\r\n                                    return (\r\n                                      <>\r\n                                        <p>\r\n                                          {key}:{value}\r\n                                        </p>\r\n                                      </>\r\n                                    );\r\n                                  }\r\n                                )}\r\n                              </div>\r\n                            </Card.Text>\r\n                          </Card.Body>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </Card>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default NewCatcard;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Navigation from \"./Navigation\";\r\nimport { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Cardlayout from \"./Cardlayout\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Slides from \"./Slides\";\r\nimport Catcard from \"./Catcard\";\r\nimport NewCatcard from \"./NewCatcard\";\r\nconst Home = () => {\r\n  const [pageCount, setpageCount] = useState(0);\r\n\r\n  let limit = 10;\r\n  const [users, setUsers] = useState([]);\r\n  const [alldata, setData] = useState([]);\r\n  const [newusers, setNewusers] = useState([]);\r\n\r\n  // const getNew = async () => {\r\n  //   try {\r\n  //     let response = await fetch(\"/allnew\");\r\n  //     const result = await response.json();\r\n  //     console.log(\"hello response\", result);\r\n  //     setpageCount(Math.ceil(result.length / 5));\r\n  //     if (result) setData(await result);\r\n  //     console.log(\"hello alldata\", alldata);\r\n  //     if (alldata.length > 1) setNewusers(await alldata.slice(0, 5));\r\n\r\n  //     console.log(\"hello newusers\", newusers);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n  // const getUsers = async () => {\r\n  //   try {\r\n  //     let response = await fetch(\r\n  //       `https://newsapi.org/v2/top-headlines?country=us&apiKey=825a0c3207b24416b15fe1e1d1e34eb9&pageSize=40`\r\n  //     );\r\n\r\n  //     setUsers(response.articles);\r\n  //     setpageCount(Math.ceil(50 / limit));\r\n\r\n  //     console.log(response.articles);\r\n  //   } catch (error) {\r\n  //     console.log(\"my error is \" + error);\r\n  //   }\r\n  // };\r\n\r\n  useLayoutEffect(() => {\r\n    // getUsers();\r\n    const getNew = fetch(\"https://newerver.herokuapp.com/allNew\");\r\n    getNew\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setData(data);\r\n        console.log(alldata);\r\n        setNewusers(alldata.slice(0, 5));\r\n        setpageCount(5);\r\n        console.log(newusers);\r\n      });\r\n  }, [pageCount]);\r\n\r\n  // const fetchComments = async (currentPage) => {\r\n  //   let res = await fetch(\r\n  //     `https://newsapi.org/v2/top-headlines?country=us&apiKey=825a0c3207b24416b15fe1e1d1e34eb9&page=${currentPage}pageSize=${limit}`\r\n  //   );\r\n\r\n  //   res = await res.json();\r\n  //   return res;\r\n  // };\r\n\r\n  const handlePageClick = async (data) => {\r\n    console.log(data.selected);\r\n    let currentPage = data.selected + 1;\r\n    setNewusers(alldata.slice(5 * currentPage, 5 * currentPage + 5));\r\n    console.log(newusers);\r\n\r\n    // const commentsFormServer = await fetchComments(currentPage);\r\n\r\n    // setUsers(commentsFormServer.articles);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {newusers.length < 1 ? null : (\r\n        <>\r\n          <Container fluid>\r\n            <Row>\r\n              <Navigation />\r\n            </Row>\r\n            <Row>\r\n              <Slides />\r\n            </Row>\r\n            <Row>\r\n              <NewCatcard users={newusers} />\r\n            </Row>\r\n            <Row>\r\n              <ReactPaginate\r\n                previousLabel={\"previous\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                pageCount={pageCount}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={3}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousClassName={\"page-item\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Row>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation';\r\nimport Category from './components/Category';\r\nimport Allnews from './components/Allnews';\r\nimport Home from './components/Home';\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/category'>\r\n            <Category />\r\n          </Route>\r\n          <Route path='/all-news'>\r\n            <Allnews />\r\n          </Route>\r\n          <Route path='/'>\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}